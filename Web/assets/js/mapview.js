// Generated by CoffeeScript 1.3.3
(function() {
  var incident, initialize, makeModal, map;

  makeModal = function() {
    var popup;
    console.log("Creating Modal");
    popup = $("<div class=\"modal hide fade in\" id=\"myModal\">		<div class=\"modal-header\">			<button type=\"button\" class=\"close\" data-dismiss=\"modal\">ï¿½</button>			<h3>Mock Incident</h3>		</div>		<div class=\"modal-body\">			<div href=\"#\" class=\"thumbnail\" id=\"testThumbnail\">				<img src=\"http://placehold.it/1040x640\" alt=\"\">				</div>			<h2>The Title</h2>			<p> This is a sample picture to be used as a place holder when testing for content or something and another line for good measure, anlala and some more writing alalala and some more writing alalala and some more writing alalala </p>			<h2>Comments</h2>			<p> This is the first comment on this incident </p>			<p> This is the second comment on this incident, yay another comment</p>			<p> This is the second comment on this incident, yay another comment</p>			<p> This is the fourth comment, no wait the second comment was double post</p>			<textarea class=\"input-xlarge\" id=\"textarea\" rows=\"3\" style=\"margin: 0px; width: 695px; height: 114px; \"></textarea>			<p></p>			<a href=\"#\" class=\"btn btn-success\">Leave Comment</a>		</div>		<div class=\"modal-footer\">		<a href=\"#\" class=\"btn btn-danger\" data-dismiss=\"modal\">Close</a>				</div>			</div>");
    return popup.modal({
      show: true
    });
  };

  initialize = function() {
    var elem, imageBounds, inc, map, mapCenter, mapOptions, newark, newarkLat, newarkLng, num, oldmap, _i,
      _this = this;
    mapCenter = new google.maps.LatLng(40.740, -74.18);
    mapOptions = {
      zoom: 13,
      center: mapCenter,
      mapTypeId: google.maps.MapTypeId.ROADMAP
    };
    elem = document.getElementById('map_canvas');
    map = new google.maps.Map(elem, mapOptions);
    for (num = _i = 1; _i <= 10; num = ++_i) {
      inc = new incident(num, "matt.je.betts@gmail.com", -34.397 + num, 150.644 + num, "http://www.w3schools.com/images/pulpit.jpg", "a");
      inc.draw(map);
    }
    newark = new google.maps.LatLng(40.740, -74.18);
    newarkLat = new google.maps.LatLng(40.716216, -74.213393);
    newarkLng = new google.maps.LatLng(40.765641, -74.139235);
    imageBounds = new google.maps.LatLngBounds(newarkLat, newarkLng);
    oldmap = new google.maps.GroundOverlay("http://www.lib.utexas.edu/maps/historical/newark_nj_1922.jpg", imageBounds);
    google.maps.event.addListener(oldmap, 'click', function() {
      return makeModal();
    });
    return oldmap.setMap(map);
  };

  google.maps.event.addDomListener(window, 'load', initialize);

  /*
  Individual incident, located on the map
  */


  incident = (function() {

    function incident(id, email, lat, lng, img, desc) {
      var acceptButton, popupContent, popupContentX,
        _this = this;
      this.id = id;
      this.email = email;
      this.lat = lat;
      this.lng = lng;
      this.img = img;
      this.desc = desc;
      /* 
      		Popup content
      		the document dom creation needs to be done to reference the dom,
      		before wrapping in in jquery,
      		so it can be passes to the maps API
      */

      popupContentX = document.createElement("div");
      popupContentX.innerText = "content!";
      popupContent = $(popupContentX);
      this.status = $("<p>waiting</p>");
      acceptButton = $("<div> Accept </div>");
      acceptButton.click(function() {
        return _this.accept();
      });
      this.info = new google.maps.InfoWindow;
      this.info.setContent(popupContentX);
      popupContent.append(acceptButton);
      popupContent.append(this.status);
      popupContent.append("			<b> " + this.id + "</b>			<img src=\"" + this.img + "\" />			");
      this.accepted = false;
    }

    incident.prototype.draw = function(map) {
      var mrk,
        _this = this;
      mrk = new google.maps.Marker({
        position: new google.maps.LatLng(this.lat, this.lng),
        map: map
      });
      return google.maps.event.addListener(mrk, 'click', function() {
        return _this.info.open(map, mrk);
      });
    };

    incident.prototype.accept = function() {
      this.accepted = true;
      return this.status.html("Accepted");
    };

    return incident;

  })();

  map = $("#map_canvas");

  map.css({
    height: "100%"
  });

}).call(this);
